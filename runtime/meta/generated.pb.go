// Copyright 2023 lack
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.// Code generated by proto-gen-gogo. DO NOT EDIT.
// source: github.com/vine-io/gogogen/runtime/meta/generated.proto

package meta

import (
	ebinary "encoding/binary"
	fmt "fmt"

	io "io"
	math "math"
	bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _ = ebinary.BigEndian

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c1045c0ce15659, []int{0}
}
func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c1045c0ce15659, []int{1}
}
func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Sub) Reset()         { *m = Sub{} }
func (m *Sub) String() string { return proto.CompactTextString(m) }
func (*Sub) ProtoMessage()    {}
func (*Sub) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c1045c0ce15659, []int{2}
}
func (m *Sub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sub.Unmarshal(m, b)
}
func (m *Sub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sub.Marshal(b, m, deterministic)
}
func (m *Sub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sub.Merge(m, src)
}
func (m *Sub) XXX_Size() int {
	return xxx_messageInfo_Sub.Size(m)
}
func (m *Sub) XXX_DiscardUnknown() {
	xxx_messageInfo_Sub.DiscardUnknown(m)
}

var xxx_messageInfo_Sub proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Meta)(nil), "meta.Meta")
	proto.RegisterMapType((map[string]string)(nil), "meta.Meta.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "meta.Meta.TagsEntry")
	proto.RegisterType((*Resource)(nil), "meta.Resource")
	proto.RegisterMapType((map[string]string)(nil), "meta.Resource.AnnEntry")
	proto.RegisterMapType((map[string]Sub)(nil), "meta.Resource.SubMapEntry")
	proto.RegisterType((*Sub)(nil), "meta.Sub")
}

func init() {
	proto.RegisterFile("github.com/vine-io/gogogen/runtime/meta/generated.proto", fileDescriptor_74c1045c0ce15659)
}

var fileDescriptor_74c1045c0ce15659 = []byte{
	// 660 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x6e, 0xd3, 0x4a,
	0x14, 0xb6, 0x63, 0x27, 0x37, 0x39, 0xbe, 0xba, 0xbd, 0x1d, 0x10, 0x1d, 0x82, 0x70, 0xac, 0x2e,
	0x68, 0x16, 0x34, 0x91, 0xba, 0x28, 0x88, 0x5d, 0xdc, 0x16, 0x54, 0xa0, 0x08, 0x4d, 0x5a, 0x16,
	0xec, 0xc6, 0xc9, 0xc1, 0x58, 0x8d, 0xc7, 0x91, 0x7f, 0x2a, 0x75, 0xc7, 0x1b, 0xc0, 0x63, 0x75,
	0xd9, 0x65, 0x57, 0x15, 0x75, 0xdf, 0x82, 0x15, 0x9a, 0xb1, 0x9b, 0x38, 0x29, 0x20, 0x04, 0x3b,
	0xcf, 0xf9, 0x7e, 0xce, 0xcf, 0x1c, 0x0f, 0x3c, 0xf1, 0x83, 0xf4, 0x63, 0xe6, 0xf5, 0x46, 0x51,
	0xd8, 0x3f, 0x09, 0x04, 0x6e, 0x06, 0x51, 0xdf, 0x8f, 0xfc, 0xc8, 0x47, 0xd1, 0x8f, 0x33, 0x91,
	0x06, 0x21, 0xf6, 0x43, 0x4c, 0x79, 0xdf, 0x47, 0x81, 0x31, 0x4f, 0x71, 0xdc, 0x9b, 0xc6, 0x51,
	0x1a, 0x11, 0x53, 0x46, 0xdb, 0x9b, 0x15, 0xb9, 0x94, 0xf5, 0x15, 0xe8, 0x65, 0x1f, 0xd4, 0x49,
	0x1d, 0xd4, 0x57, 0x21, 0x5a, 0xff, 0x5c, 0x07, 0xf3, 0x00, 0x53, 0x4e, 0x1c, 0x30, 0x8f, 0x03,
	0x31, 0xa6, 0xba, 0xa3, 0x77, 0x5b, 0xee, 0xbf, 0x67, 0x97, 0x1d, 0x2d, 0xbf, 0xec, 0x98, 0xaf,
	0x02, 0x31, 0x66, 0x0a, 0x21, 0x5b, 0x00, 0x7c, 0x1a, 0xbc, 0xc3, 0x38, 0x09, 0x22, 0x41, 0x41,
	0xf1, 0x48, 0xc9, 0x83, 0xc1, 0xdb, 0xfd, 0x12, 0x61, 0x15, 0x96, 0x74, 0x15, 0x3c, 0x44, 0x6a,
	0x2c, 0xba, 0xbe, 0xe1, 0x21, 0x32, 0x85, 0x90, 0x87, 0x60, 0x64, 0xc1, 0x98, 0x5a, 0x8a, 0x60,
	0x95, 0x04, 0xe3, 0x68, 0x7f, 0x97, 0xc9, 0x38, 0x79, 0x01, 0xab, 0xa3, 0x18, 0x79, 0x1a, 0x44,
	0xe2, 0x30, 0x08, 0x31, 0x49, 0x79, 0x38, 0xa5, 0x75, 0x47, 0xef, 0x1a, 0xee, 0xfd, 0x92, 0xbc,
	0xba, 0xb3, 0x4c, 0x60, 0xb7, 0x35, 0x64, 0x00, 0x2b, 0xd9, 0x74, 0xcc, 0x53, 0x9c, 0xdb, 0x34,
	0x94, 0xcd, 0x5a, 0x69, 0xb3, 0x72, 0xb4, 0x08, 0xb3, 0x65, 0xbe, 0xac, 0x65, 0x8c, 0x13, 0x5c,
	0xac, 0xe5, 0x9f, 0xc5, 0x5a, 0x76, 0x97, 0x09, 0xec, 0xb6, 0x86, 0x6c, 0x83, 0x99, 0x72, 0x3f,
	0xa1, 0x4d, 0xc7, 0xe8, 0x5a, 0x5b, 0x77, 0x7b, 0xf2, 0xe2, 0x7a, 0xf2, 0x16, 0x7a, 0x87, 0xdc,
	0x4f, 0xf6, 0x44, 0x1a, 0x9f, 0xce, 0x67, 0x25, 0x43, 0x4c, 0xf1, 0x09, 0x03, 0x8b, 0x0b, 0x11,
	0xa5, 0xaa, 0xb5, 0x84, 0xb6, 0x94, 0xfc, 0x41, 0x45, 0x3e, 0x98, 0xa3, 0x85, 0xcb, 0x9d, 0xd2,
	0xc5, 0xaa, 0x20, 0xac, 0x6a, 0xd2, 0xde, 0x81, 0xd6, 0x2c, 0x29, 0xb9, 0x07, 0xc6, 0x31, 0x9e,
	0x96, 0x3b, 0x60, 0x4a, 0x2d, 0x93, 0x01, 0xd2, 0x86, 0xfa, 0x09, 0x9f, 0x64, 0x48, 0x6b, 0x15,
	0xa4, 0x08, 0x3d, 0xab, 0x3d, 0xd5, 0xdb, 0x2f, 0xe1, 0xff, 0xe5, 0xd4, 0x7f, 0xea, 0xb5, 0xfe,
	0xcd, 0x80, 0x26, 0xc3, 0x24, 0xca, 0xe2, 0x11, 0x92, 0xc7, 0xa0, 0xb6, 0x9a, 0xea, 0x4e, 0xad,
	0x6b, 0x6d, 0xc1, 0xbc, 0xd5, 0xf9, 0x7c, 0xe4, 0x89, 0x29, 0x96, 0xdc, 0xb6, 0x64, 0x8a, 0xa3,
	0xd2, 0x79, 0xc6, 0x18, 0x4e, 0x71, 0xc4, 0x14, 0x42, 0xd6, 0xa1, 0x31, 0xe1, 0x1e, 0x4e, 0x12,
	0x6a, 0x38, 0x46, 0xb7, 0xe5, 0x42, 0x7e, 0xd9, 0x69, 0xbc, 0x56, 0x11, 0x56, 0x22, 0x64, 0x1b,
	0x0c, 0x2e, 0x04, 0x35, 0xd5, 0x74, 0xd7, 0x8a, 0x94, 0x37, 0x05, 0xc9, 0x09, 0x17, 0x93, 0x9d,
	0xad, 0xea, 0x40, 0x08, 0x26, 0x05, 0x64, 0x03, 0xcc, 0x24, 0xf3, 0x12, 0x5a, 0x57, 0xc2, 0x56,
	0x21, 0x1c, 0x66, 0x9e, 0xdb, 0x54, 0x45, 0x64, 0x5e, 0xc2, 0x14, 0x81, 0xb8, 0xd0, 0x48, 0x32,
	0xef, 0x80, 0xcb, 0x0d, 0x94, 0xd4, 0xf6, 0x52, 0x8e, 0xa1, 0x02, 0x8b, 0x34, 0xff, 0x95, 0x69,
	0x1a, 0x45, 0x90, 0x95, 0x4a, 0xf2, 0x08, 0x1a, 0x28, 0xb8, 0x37, 0x41, 0xb5, 0x80, 0xcd, 0x39,
	0x6f, 0x4f, 0x45, 0x59, 0x89, 0xca, 0xdf, 0x8b, 0xfb, 0x48, 0x9b, 0x8e, 0xde, 0xad, 0x57, 0x6a,
	0xf6, 0x91, 0xc9, 0x78, 0xdb, 0x85, 0xe6, 0x4d, 0x47, 0x7f, 0x71, 0xf9, 0x56, 0xa5, 0xe2, 0x9f,
	0xda, 0x74, 0xaa, 0x36, 0xd5, 0xf9, 0x54, 0x2f, 0xff, 0x39, 0x18, 0xc3, 0xcc, 0x9b, 0x3d, 0x1b,
	0xfa, 0xaf, 0x9e, 0x0d, 0xd9, 0x57, 0xed, 0xc7, 0x7d, 0xb9, 0x47, 0x67, 0x57, 0xb6, 0x76, 0x7e,
	0x65, 0x6b, 0x17, 0x57, 0xb6, 0xfe, 0x29, 0xb7, 0xf5, 0xb3, 0xdc, 0xd6, 0xce, 0x73, 0x5b, 0xbb,
	0xc8, 0x6d, 0xfd, 0x6b, 0x6e, 0xeb, 0x5f, 0xae, 0x6d, 0xed, 0xfc, 0xda, 0xd6, 0x2e, 0xae, 0x6d,
	0xed, 0xfd, 0xc6, 0x6f, 0x3e, 0xb9, 0xdf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x90, 0xc0, 0x72, 0x85,
	0x9c, 0x05, 0x00, 0x00,
}

func (m *Meta) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Kind)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.APIVersion)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.UID)
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.CreationTimestamp))
	n += 1 + sovGenerated(uint64(m.UpdateTimestamp))
	n += 1 + sovGenerated(uint64(m.DeletionTimestamp))
	if len(m.Tags) > 0 {
		for k, v := range m.Tags {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	if len(m.Annotations) > 0 {
		for k, v := range m.Annotations {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *Resource) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Meta.XSize()
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Spec)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Labels) > 0 {
		for _, s := range m.Labels {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	if len(m.Ann) > 0 {
		for k, v := range m.Ann {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	if len(m.Subs) > 0 {
		for _, e := range m.Subs {
			l = e.XSize()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	if len(m.SubMap) > 0 {
		for k, v := range m.SubMap {
			_ = k
			_ = v
			l = v.XSize()
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + l + sovGenerated(uint64(l))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	n += 2
	n += 1 + sovGenerated(uint64(m.Age))
	return n
}

func (m *Sub) XSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.Age))
	return n
}

func sovGenerated(x uint64) (n int) {
	return (bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenerated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenerated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenerated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenerated = fmt.Errorf("proto: unexpected end of group")
)
